package apamax.training;

/**
 * Temperature readings taken periodically from the sensor on a robot.
 * Will be sent periodically in normal running of the robot.
 * 
 * To receive over DES you have to subscribe to the CHANNEL for the event and then write a listener or a stream:
 *
 * monitor.subscribe(TemperatureReading.CHANNEL);
 * on all TemperatureReading() as tr { doSomething(); }
 */
event TemperatureReading {
	/** The unique ID of the robot. */
	integer id;
	/** The index of which sensor on the robot (1 or 2) was read. */
	integer sensor;
	/** The current temperature reading of the robot. */
	float temperature;
	
	// Autogenerated by DES export - do not modify
	/**
	 * The Apama channel associated with this event type.
	 * This channel can be used to send events of this type to DES, subscribe to receive events of this type from DES,
	 * unsubscribe from receiving events of this type from DES, and get the sending or receiving chain associated with this event type.
	 * 
	 * Sending, subscribing and unsubscribing to this channel is no different than interacting with any other Apama channel.
	 * To get the Chain instance associated with sending or receiving of this type, use the com.softwareag.connectivity.ConnectivityPlugins.getChainByChannel action.
	 * 
	 * Note: Events of this type cannot be sent or received reliably unless the com.softwareag.connectivity.MessageId annotation is used for them.
	 */
	constant string CHANNEL := "des:apamax.training.TemperatureReading";
	// End of autogeneration
}